// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Printer.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.tansadio.monmp3.Mp3;

public interface LecteurMp3Prx extends Ice.ObjectPrx
{
    public String jouer();

    public String jouer(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_jouer();

    public Ice.AsyncResult begin_jouer(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_jouer(Ice.Callback __cb);

    public Ice.AsyncResult begin_jouer(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_jouer(Callback_LecteurMp3_jouer __cb);

    public Ice.AsyncResult begin_jouer(java.util.Map<String, String> __ctx, Callback_LecteurMp3_jouer __cb);

    public String end_jouer(Ice.AsyncResult __result);

    public String pause();

    public String pause(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pause();

    public Ice.AsyncResult begin_pause(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pause(Ice.Callback __cb);

    public Ice.AsyncResult begin_pause(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_pause(Callback_LecteurMp3_pause __cb);

    public Ice.AsyncResult begin_pause(java.util.Map<String, String> __ctx, Callback_LecteurMp3_pause __cb);

    public String end_pause(Ice.AsyncResult __result);

    public void stop();

    public void stop(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stop();

    public Ice.AsyncResult begin_stop(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stop(Ice.Callback __cb);

    public Ice.AsyncResult begin_stop(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stop(Callback_LecteurMp3_stop __cb);

    public Ice.AsyncResult begin_stop(java.util.Map<String, String> __ctx, Callback_LecteurMp3_stop __cb);

    public void end_stop(Ice.AsyncResult __result);

    public void selectedMusic(String name);

    public void selectedMusic(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_selectedMusic(String name);

    public Ice.AsyncResult begin_selectedMusic(String name, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_selectedMusic(String name, Ice.Callback __cb);

    public Ice.AsyncResult begin_selectedMusic(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_selectedMusic(String name, Callback_LecteurMp3_selectedMusic __cb);

    public Ice.AsyncResult begin_selectedMusic(String name, java.util.Map<String, String> __ctx, Callback_LecteurMp3_selectedMusic __cb);

    public void end_selectedMusic(Ice.AsyncResult __result);

    public String[] getFilemp3();

    public String[] getFilemp3(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getFilemp3();

    public Ice.AsyncResult begin_getFilemp3(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getFilemp3(Ice.Callback __cb);

    public Ice.AsyncResult begin_getFilemp3(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getFilemp3(Callback_LecteurMp3_getFilemp3 __cb);

    public Ice.AsyncResult begin_getFilemp3(java.util.Map<String, String> __ctx, Callback_LecteurMp3_getFilemp3 __cb);

    public String[] end_getFilemp3(Ice.AsyncResult __result);
}
